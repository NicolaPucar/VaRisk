% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GetReturns.MyData.R
\name{GetReturns.MyData}
\alias{GetReturns.MyData}
\title{This function converts some given data in a format that is readable for the others package's functions}
\usage{
GetReturns.MyData(dataSet,stockName,columnData,columnPrice,columnReturn)
}
\arguments{
\item{dataSet}{A dataframe that has to contain the following column: Dates, Prices, Return}

\item{stockName}{A string that will become the name of the variable created by the function}

\item{columnData}{A number that correspond to the column of the dates in the given "dataSet"}

\item{columnPrice}{A number that correspond to the column of the prices in the given "dataSet"}

\item{columnReturn}{A number that correspond to the column of the returns in the given "dataSet"}
}
\value{
The function create directly a dataframe inside the Global Environment named as "stockName".
This new dataframe contains three column:
- The first column contains the dates
- The second column contains the prices
- The third column contains the returns
}
\description{
This function converts some given data in a format that is readable for the others package's functions
}
\examples{
# We create a dataframe as examples that contains also other terms that we don't need and then we use the function
dates <- as.Date(c("2019/01/01","2019/01/02","2019/01/03","2019/01/04"))
prices <- c(189.43,190.50,186.97,188.59)
returns <- NULL
for (k in 2:4) { returns[k] <- (prices[k]-prices[k-1])/prices[k-1] }
randomData <- rnorm(4)

ourDataFrameExample <- data.frame(prices,randomData,dates,returns)

GetReturns.MyData(ourDataFrameExample,"PIPPO",3,1,4)
}
